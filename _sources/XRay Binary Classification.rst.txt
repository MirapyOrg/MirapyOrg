
XRay Binary Classification
==========================

.. code:: ipython3

    from mirapy.data.load_dataset import load_xray_binary_data
    from mirapy.classifiers.models import XRayBinaryClassifier
    import mirapy
    
    from sklearn.metrics import classification_report, accuracy_score
    from sklearn.model_selection import train_test_split
    from keras.optimizers import Adam


.. parsed-literal::

    Using TensorFlow backend.


``y_train`` is categorical and ``y_test`` is numeric value of the class.

.. code:: ipython3

    data_dir = 'D:\MTP\XRay-Binary-Classification\XRay-Binary-Classification\Training'
    x_train, y_train, x_test, y_test = load_xray_binary_data(data_dir, 0.2, True)

.. code:: ipython3

    classifier = XRayBinaryClassifier('relu', 'adam')
    
    classifier.compile('mean_squared_error')

.. code:: ipython3

    classifier.train(x_train, y_train, epochs=10,
                           batch_size=32)


.. parsed-literal::

    Epoch 1/10
     - 5s - loss: 0.0153 - acc: 0.9713
    Epoch 2/10
     - 7s - loss: 0.0154 - acc: 0.9709
    Epoch 3/10
     - 6s - loss: 0.0152 - acc: 0.9714
    Epoch 4/10
     - 7s - loss: 0.0150 - acc: 0.9711
    Epoch 5/10
     - 6s - loss: 0.0151 - acc: 0.9709
    Epoch 6/10
     - 6s - loss: 0.0150 - acc: 0.9710
    Epoch 7/10
     - 6s - loss: 0.0149 - acc: 0.9710
    Epoch 8/10
     - 5s - loss: 0.0150 - acc: 0.9714
    Epoch 9/10
     - 4s - loss: 0.0149 - acc: 0.9710
    Epoch 10/10
     - 4s - loss: 0.0148 - acc: 0.9715




.. parsed-literal::

    <keras.callbacks.History at 0x16b0d728cf8>



.. code:: ipython3

    y_predicted = classifier.test(x_test)
    print(classification_report(y_test, y_predicted))
    print("Accuracy:", round(accuracy_score(y_test, y_predicted)*100, 2), "%")


.. parsed-literal::

                  precision    recall  f1-score   support
    
               0       0.96      0.97      0.97      2637
               1       0.91      0.87      0.89       484
               2       0.98      0.98      0.98      5056
    
       micro avg       0.97      0.97      0.97      8177
       macro avg       0.95      0.94      0.95      8177
    weighted avg       0.97      0.97      0.97      8177
    
    Accuracy: 97.05 %

